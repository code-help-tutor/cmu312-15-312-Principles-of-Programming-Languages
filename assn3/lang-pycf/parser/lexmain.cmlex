sml
name LexMain
alphabet 255

set alpha = (range 'a 'z 'A 'Z)
set digit = (range '0 '9)
set alphanumeric = (| alpha digit '_)
set newline = (| 10 12 13) /* lf, ff, cr */
set white = (| 32 9)  /* space, tab */
set stringchar = (~ '" '\)

function lexmain : t =
  eos => eof
  (+ white) => skip
  newline => newline

  (seq "if" (+ white) '_ '_ "name" '_ '_ (+ white) "==" (+ white) '" '_ '_ "main" '_ '_ '" ':) => ifname
  (seq (| alpha '_) (* alphanumeric)) => ident
  (seq (? '-) (+ digit)) => number

  '[ => lbracket
  '] => rbracket
  '( => lparen
  ') => rparen
  ': => colon
  ', => comma
  "<=" => leq
  '= => equal
  '+ => plus
  '; => semicolon

  "#" => begin_comment
  epsilon => error

function skipcomment : u =
  newline => comment_newline
  any => comment_skip
  epsilon => comment_error
