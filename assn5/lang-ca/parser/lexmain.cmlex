sml
name LexMainFun
alphabet 128

set alpha = (range 'a 'z 'A 'Z)
set digit = (range '0 '9)
set alphanumeric = (| alpha digit '_ '')
set white = (| 32 9 10 13)  /* space, tab */
set identstart = (| '_ alpha)

regexp ident = (seq identstart (* alphanumeric))
regexp ws = (+ white)
regexp digits = (+ digit)
regexp filename = (seq '" (seq (+ any) '"))
set not_quote = (~ '')
regexp str = (seq '' (seq (* not_quote) ''))

function lexmain : t =
   eos => eof
   ident => ident
   ws => skip
   '. => dot
   '= => equal
   '( => lparen
   ') => rparen
   '{ => lbrace
   '} => rbrace
   '[ => lbrack
   '] => rbrack
   '< => lt
   '> => gt
   ', => comma
   '+ => plus
   '* => star
   '- => dash
   '/ => slash
   '% => percent
   "<=" => lte
   ">=" => gte
   "!=" => neq
   "<>" => neq
   "&&" => andand
   "||" => oror
   '! => bang
   ': => colon
   '~ => tilde
   "=>" => darrow
   "->" => arrow
   '| => pipe
   digits => num
   filename => filename
   "/*" => lcomment
   str => str
   epsilon => error

 function skipcomment : u =
   "/*" => comment_open
   "*/" => comment_close
   any => comment_skip
   epsilon => comment_error
